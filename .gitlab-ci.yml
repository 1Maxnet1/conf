variables:
  ASAN_SYMBOLIZER_PATH: "/usr/bin/llvm-symbolizer"

# GCC production
gcc-release:
  tags:
    - bionic
  script:
    - export BOOST_ROOT=/opt/boost_1_67_0-gcc-7
    - mkdir -p build-release
    - cd build-release
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
    - make -j8 conf-example conf-test
    - ./conf-example
    - ./conf-test

# Clang debug with address sanitizer
clang-debug-asan:
  tags:
    - bionic
  script:
    - export ASAN_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer
    - export CXXFLAGS="-fsanitize=address -fno-omit-frame-pointer"
    - export BOOST_ROOT=/opt/boost_1_67_0-gcc-7
    - export CXX=clang++
    - export CC=clang
    - mkdir -p build-asan
    - cd build-asan
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Debug ..
    - ninja -j8 conf-example conf-test
    - ./conf-example
    - ./conf-test


# GCC debug valgrind
gcc-debug-valgrind:
  tags:
    - bionic
  script:
    - export BOOST_ROOT=/opt/boost_1_67_0-gcc-7
    - git submodule update --init --recursive
    - mkdir -p build-gcc-debug-valgrind
    - cd build-gcc-debug-valgrind
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Debug ..
    - ninja -j8 conf-example conf-test
    - valgrind --error-exitcode=1 --show-reachable=yes --leak-check=full ./conf-example
    - valgrind --error-exitcode=1 --show-reachable=yes --leak-check=full ./conf-test

# MSVC release
msvc-release:
  tags:
    - windows
  script:
    - set WD=%cd%
    - call "C:\Program Files (x86)\Microsoft Visual C++ Build Tools\vcbuildtools.bat" amd64
    - cd %WD%
    - set BOOST_ROOT=C:\boost_1_60_0
    - mkdir build-msvc-release
    - cd build-msvc-release
    - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DZLIB_ROOT=C:\zlib-1.2.8 ..
    - ninja conf-example conf-test
    - conf-example
    - conf-test
